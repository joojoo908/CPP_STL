

======================================
Save Time: 05/27/25 15:45:06 Tuesday
======================================

﻿// ------------------------------------------------------------
//  - 5 / 27 -
// ------------------------------------------------------------
// 6월 19일 목요일 - 15주 2일 - 기말
// ------------------------------------------------------------
// associative container (key 값을 기준으로 항상 정렬하는 컨테이너)
// set / multiset - key==value   --동등성 관계를 이용하여 (< >)유니크함을 판단   /+상등성 관계(==)
// map / multimap - pair<key,value>
// ------------------------------------------------------------



#include <iostream>

#include <set>
#include <ranges>
#include <algorithm>
#include <fstream>
#include <vector>

#include "STRING.h"
#include "save.h"
using namespace std;

extern bool 관찰;           //관찰하고 싶으면 true 로

int main()
//--------
{
	set<STRING> s;
	vector<STRING> v;
	v.reserve(10000);

	ifstream in{ "이상한 나라의 앨리스.txt" };
	if (not in)
		return 0;

	STRING str;
	int i{ 0 };
	while (in >> str) {
		v.push_back(str);
	}
	cout << i << endl;

	for (const STRING& str : s)
		cout << str << endl;

	save("main.cpp");
}

======================================
Save Time: 05/27/25 15:59:20 Tuesday
======================================

﻿// ------------------------------------------------------------
//  - 5 / 27 -
// ------------------------------------------------------------
// 6월 19일 목요일 - 15주 2일 - 기말
// ------------------------------------------------------------
// associative container (key 값을 기준으로 항상 정렬하는 컨테이너)
// set / multiset - key==value   --동등성 관계를 이용하여 (< >)유니크함을 판단   /+상등성 관계(==)
// map / multimap - pair<key,value>
// ------------------------------------------------------------



#include <iostream>

#include <set>
#include <ranges>
#include <algorithm>
#include <fstream>
#include <vector>

#include "STRING.h"
#include "save.h"
using namespace std;

extern bool 관찰;           //관찰하고 싶으면 true 로

int main()
//--------
{
	ifstream in{ "이상한 나라의 앨리스.txt" };
	if (not in)
		return 0;

	
	vector<STRING> v;
	v.reserve(10000);

	STRING str;
	int i{ 0 };
	while (in >> str) {
		v.push_back(str);
	}
	cout << v.size() << endl;

	set<STRING> s;
	for (const STRING& str : v) {
		s.insert(str);
	}

	for (const STRING& str : s)
		cout << str << endl;

	save("main.cpp");
}

======================================
Save Time: 05/27/25 16:01:16 Tuesday
======================================

﻿// ------------------------------------------------------------
//  - 5 / 27 -
// ------------------------------------------------------------
// 6월 19일 목요일 - 15주 2일 - 기말
// ------------------------------------------------------------
// associative container (key 값을 기준으로 항상 정렬하는 컨테이너)
// set / multiset - key==value   --동등성 관계를 이용하여 (< >)유니크함을 판단   /+상등성 관계(==)
// map / multimap - pair<key,value>
// ------------------------------------------------------------



#include <iostream>

#include <set>
#include <ranges>
#include <algorithm>
#include <fstream>
#include <vector>

#include "STRING.h"
#include "save.h"
using namespace std;

extern bool 관찰;           //관찰하고 싶으면 true 로

int main()
//--------
{
	ifstream in{ "이상한 나라의 앨리스.txt" };
	if (not in)
		return 0;

	
	vector<STRING> v;
	v.reserve(10000);

	STRING str;
	int i{ 0 };
	while (in >> str) {
		v.push_back(str);
	}
	cout << v.size() << endl;

	set<STRING> s;
	s.insert(v.begin(), v.end());

	for (const STRING& str : s)
		cout << str << endl;

	save("main.cpp");
}

======================================
Save Time: 05/27/25 16:02:38 Tuesday
======================================

﻿// ------------------------------------------------------------
//  - 5 / 27 -
// ------------------------------------------------------------
// 6월 19일 목요일 - 15주 2일 - 기말
// ------------------------------------------------------------
// associative container (key 값을 기준으로 항상 정렬하는 컨테이너)
// set / multiset - key==value   --동등성 관계를 이용하여 (< >)유니크함을 판단   /+상등성 관계(==)
// map / multimap - pair<key,value>
// ------------------------------------------------------------



#include <iostream>

#include <set>
#include <ranges>
#include <algorithm>
#include <fstream>
#include <vector>

#include "STRING.h"
#include "save.h"
using namespace std;

extern bool 관찰;           //관찰하고 싶으면 true 로

int main()
//--------
{
	ifstream in{ "이상한 나라의 앨리스.txt" };
	if (not in)
		return 0;

	
	vector<STRING> v;
	v.reserve(10000);

	STRING str;
	int i{ 0 };
	while (in >> str) {
		v.push_back(str);
	}
	cout << v.size() << endl;

	set<STRING> s{ v.begin(), v.end() };
	
	for (const STRING& str : s)
		cout << str << endl;
	cout << s.size() << endl;

	save("main.cpp");
}